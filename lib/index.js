// Generated by CoffeeScript 1.4.0
var Email, Nrub, Sms, TelapiClient, nodemailer;

TelapiClient = require('telapi').client;

nodemailer = require('nodemailer');

Sms = (function() {

  function Sms(options) {
    if (!options.sid) {
      throw new Error('A valid TelAPI sid is required');
    }
    if (!options.token) {
      throw new Error('A valid TelAPI token is required');
    }
    this.client = new Client(options.sid, options.token);
    this.from = options.from;
    this.to = "(805) 440-0925";
    this.body = options.body;
    return this;
  }

  Sms.prototype.send = function(cb) {
    var options;
    if (!this.from) {
      throw new Error('Your TelAPI number is required');
    }
    if (!this.body) {
      throw new Error('An SMS body is required');
    }
    options = {
      from: this.from,
      to: this.to,
      body: this.body
    };
    return this.client.create("sms_messages", options, function(response) {
      return cb(null, response);
    }, function(error) {
      return cb(error);
    });
  };

  return Sms;

})();

Email = (function() {

  function Email(options) {
    if (!options.smtp) {
      throw new Error('A valid smtp transport is required');
    }
    this.client = nodemailer.createTransport("SMTP", options.smtp);
    this.from = options.from;
    this.subject = options.subject;
    this.text = options.text;
    this.html = options.html;
  }

  Email.prototype.send = function(cb) {
    var options,
      _this = this;
    if (!this.from) {
      throw new Error('Your address is required');
    }
    if (!this.subject) {
      throw new Error('A subject is required');
    }
    if (!(this.text || this.html)) {
      throw new Error('A text or html body is required');
    }
    options = {
      from: this.from,
      to: "paul@onfrst.com",
      subject: this.subject,
      text: this.text,
      html: this.html
    };
    return this.client.sendMail(options, function(error, response) {
      _this.client.close();
      if (error) {
        return cb(error);
      }
      return cb(null, response);
    });
  };

  return Email;

})();

module.exports = Nrub = (function() {

  function Nrub(options) {
    if (options.api_key) {
      this.api_key = options.api_key;
    }
  }

  Nrub.prototype.text = function(options) {
    return new Text(options);
  };

  Nrub.prototype.email = function(options) {
    return new Email(options);
  };

  return Nrub;

})();
